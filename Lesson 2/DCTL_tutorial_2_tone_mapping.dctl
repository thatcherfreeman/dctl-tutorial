// Get necessary parameters for this DCTL:
// mid_gray_in, mid_gray_out, white_point, black_point
DEFINE_UI_PARAMS(mid_gray_in, Input Mid Gray, DCTLUI_VALUE_BOX, 0.18)
DEFINE_UI_PARAMS(mid_gray_out, Output Mid Gray, DCTLUI_VALUE_BOX, 0.18)
DEFINE_UI_PARAMS(white_point, White Point, DCTLUI_VALUE_BOX, 1.0)
DEFINE_UI_PARAMS(black_point, Black Point, DCTLUI_VALUE_BOX, 0.0)


__DEVICE__ float tone_map(float x, float a, float b, float c) {
    return a * (x / (x + b)) + c;
}

__DEVICE__ float3 tone_map_f3(float3 x, float a, float b, float c) {
    float3 out = make_float3(0.0, 0.0, 0.0);
    out.x = tone_map(x.x, a, b, c);
    out.y = tone_map(x.y, a, b, c);
    out.z = tone_map(x.z, a, b, c);
    return out;
}

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, float p_R, float p_G, float p_B) {
    // Compute the values of a, b, c based on user parameters
    float c = black_point;
    float a = white_point - c;
    float b = (a / (mid_gray_out - c)) * (1.0 - (mid_gray_out - c) / a) * mid_gray_in;

    // Apply the tone mapping function to each of the three channels
    float3 out = tone_map_f3(make_float3(p_R, p_G, p_B), a, b, c);

    // Return the result.
    return out;

}